{"version":3,"file":"src_app_AngularRoutingCourse_user_user_module_ts.js","mappings":"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","sources":["./src/app/AngularRoutingCourse/user/components/login/login.component.ts","./src/app/AngularRoutingCourse/user/components/login/login.component.html","./src/app/AngularRoutingCourse/user/user-routing.module.ts","./src/app/AngularRoutingCourse/user/user.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errorMessage = '';\n  pageTitle = 'Log In';\n  constructor(private userService: UserService,\n    private router: Router) { }\n  ngOnInit(): void {\n  }\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.userService.login(userName, password);\n      // Navigate to the Product List page after log in.\n      if (this.userService.redirectUrl) {\n        this.router.navigateByUrl(this.userService.redirectUrl);\n      } else {\n        this.router.navigate(['/products']);\n      }\n    } else {\n      this.errorMessage = 'Please enter a user name and password.';\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        {{pageTitle}}\n    </div>\n    <div class=\"card-body\">\n        <form novalidate (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\" autocomplete=\"off\">\n            <fieldset>\n                <div class=\"row mt-2\">\n                    <label class=\"col-md-2 col-form-label\" for=\"userNameId\">User Name</label>\n                    <div class=\"col-md-8\">\n                        <input class=\"form-control\" id=\"userNameId\" type=\"text\" placeholder=\"User Name (required)\"\n                            required ngModel name=\"userName\" #userNameVar=\"ngModel\"\n                            [ngClass]=\"{'is-invalid': (userNameVar.touched || userNameVar.dirty) && !userNameVar.valid }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"userNameVar.errors?.['required']\">\n                                User name is required.\n                            </span>\n                        </span>\n                    </div>\n                </div>\n                <div class=\"row mt-2\">\n                    <label class=\"col-md-2 col-form-label\" for=\"passwordId\">Password</label>\n                    <div class=\"col-md-8\">\n                        <input class=\"form-control\" id=\"passwordId\" type=\"password\" placeholder=\"Password (required)\"\n                            required ngModel name=\"password\" #passwordVar=\"ngModel\"\n                            [ngClass]=\"{'is-invalid': (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"passwordVar.errors?.['required']\">\n                                Password is required.\n                            </span>\n                        </span>\n                    </div>\n                </div>\n                <div class=\"row mt-2\">\n                    <div class=\"col-md-4 offset-md-2\">\n                        <button class=\"btn btn-primary me-3\" type=\"submit\" style=\"width:80px\"\n                            [disabled]=\"!loginForm.valid\">\n                            Log In\n                        </button>\n                        <button class=\"btn btn-outline-secondary\" type=\"button\" style=\"width:80px\"\n                            [routerLink]=\"['/welcome']\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UserRoutingModule\n  ],\n  exports: [\n    LoginComponent\n  ]\n})\nexport class UserModule { }"],"names":[],"sourceRoot":"webpack:///"}